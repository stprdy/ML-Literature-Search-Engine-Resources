arxiv 28 jan 2004 dynamic linking smart digital object based user navigation pattern aravind elango johan bollen michael nelson computer science department old dominion university norfolk virginia usa 23529 aelango jbollen mln june 16 2018 abstract discus methodology dynamically generate link among digital object mean unsupervised learning mechanism analyzes user link traversal pattern formed experiment test bed 150 complex data object referred bucket bucket manages content provides method interact user ally maintains set link bucket demonstrate bucket capable dynamically adjusting link bucket according user link selection thereby generating meaningful network bucket relation result indicate adaptive work linked bucket approximate collective link preference community user 1 introduction current research area recommender system ha focused analyzing static sentations user preference list purchased item generate personalized mendations 8 however user preference not static shift user assume different role interest furthermore digital library application often not concern purchasable item complex information object user interest must inferred le explicit statement interest one mechanism inferring user interest analyze link previously traversed user use bucket smart digital object individually manage dynamic list link bucket generate adaptive tions smart object bucket bucket smart object aggregation data 7 bucket contain mechanism aggregate manage protect preserve data contain bucket could thought intelligent active folder among functionality also contains interface method display content 1 bucket not simply passive repository internal structure bucket may contain 0 element contain element right element may resource pdf ﬁle data set simply set ements element may pointer any arbitrary network object another bucket form url element point bucket bucket logically contain bucket bucket no predeﬁned size limitation either term storage capacity term number element author model whatever application domain desire using basic structure element bucket method activated user http request example method bucket invoked consider bucket identiﬁed url no bucket method speciﬁed display method assumed therefore mentioned url equivalent mentioned url induce bucket return overview element contains element url containing request bucket method speciﬁc bucket method allows bucket redirect request content another object could another bucket example request would request bucket redirect bucket request ternal resource ﬁrst routed bucket contains link full bucket api discussed 5 motivation bucket came previous experience design tion maintenance nasa scientiﬁc technical information digital library dl including nasa technical report server ntrs 6 bucket well suited tributed application aggregate heterogeneous content remain functional environment since independent mobile resilient changing server environment addition bucket adapted variety data type data format adaptive user interface hebb law learning 4 essential component many unsupervised method machine learning basis effort generate meaningful dynamic set link used descriptive methodology 3 bucket linking user interface change based past action user not prediction user future action advantage adaptive user interface dynamically take account user 2 information need continuously updating structure presentation hebb law learning hebb law postulate connection two neuron human brain becomes stronger neuron persistently activated quick succession one another brain continuously adapts connection neuron based previous riences although hebb law represents coarse incomplete picture neural plasticity ha found countless application machine learning hebb law speciﬁcally applicable situation no set correct erroneous response deﬁned advance system need gradually acquire information only implicitly present given data set reason hebbian learning ha successfully used adaptive hypertext work 1 learn reroute hyperlink according usage pattern analogy system use variation hebbian learning dynamic linking 2 implementing hebb law bucket fig 1 give overview hebbian learning interpreted bucket linking let u imagine user traversing 3 bucket namely linked linked assumed no link among 3 bucket initially user traverse link strengthened frequency forcement linked conjure related strengthen link link absent created user traverse weight link increased frequency reinforcement weight link incremented symmetry reinforcement since user ﬁnally reached intermediary assume ha some degree relation hence increase strength link transitivity reinforcement link absent created approach taken implement procedure wa suggested 2 bucket expected link bucket called redirect argument argument give url bucket linking also pas referer argument essentially override http referer argument value passed referer argument would instrumental implementing hebb law explained link traversed called url know referer seeing referer argument also concludes seeing redirect argument redirecting thus link incremented given frequency reinforcement see referer increment weight link given symmetry weight user next traverse following link dynamically generated 3 figure 1 implementing hebbian learning bucket see referer ﬁnds ﬁnal destination based last rect argument increase weight link given frequency reinforcement incrementing link weight redirects see no referer ment increase link weight transitivity reinforcement finally called ﬁnds referer argument increment weight link symmetry reinforcement reinforcement value based experience previous system frequency symmetry transitivity reinforcement respectively deﬁned frequency weight highest since user directly traverse link positive conﬁrmation link wa deemed relevant 3 experimental test bed one hundred ﬁfty bucket used experiment bucket represented ular music artist containing short biography band dynamic list related link bucket network list 150 music band wa composed top 50 band time chosen expert spin magazine 9 two similar band suggested bucket wa initially randomly linked 3 4 figure 2 xml representation element associated weight figure 3 example bucket display bucket weight provide initial unbiased navigation structure fig 3 show display one bucket bucket display metadata related band set link user traverse system new link created weight link increased based user link selection set link sorted based weight heavily weighted link shown higher list link le weighted link every bucket ha xml ﬁle contains information element bucket metadata weight individual link stored attribute element url pointing xml ﬁle shown fig new element added xml ﬁle using addelement method invitation traverse network wa sent 15 people june total weight associated link excluding initial random link wa 1719 unit end experiment taking account reinforcement assigned frequency symmetry transitivity estimate system approximately 1041 direct traversal 5 example bucket clash link traversal link traversal beatles smashing pumpkin glyn jones beck beck fishbone nick lowe beatles smith replacement glyn jones squeeze table 1 example dynamic link generated clash example bucket smith link traversal link traversal elvis costello replacement tool elvis costello replacement pretty thing fishbone nick lowe beatles fishbone clash johnny thunder kiss tool table 2 example dynamic link generated smith 6 4 result aim prove user start surﬁng collection portal node bucket meaningful network develops content highly centric node similar related content portal bucket link structure bucket representing public enemy wa entry point network setup similar portal user access web service portal bucket every heavily traversed bucket start reﬂecting user preference bucket linked current bucket table 1 show link associated clash bucket traversal user navigate bucket new link namically created band user presume related clash bubble top another similar example shown table evident user not associate tool initial random addition smith hence ha dropped list link compared replacement elvis costello also random initial link maintained position top list match nature smith music band bucket authority highly inﬂuential node within network expected relatively high number outgoing incoming connection node network istic refered degree centrality investigation degree centrality node network reveal network important node applied generated network bucket degree centrality therefore used partially validate network structure since bucket concern music band degree centrality may relate relative importance inﬂuence music band according community user generated network deﬁne degree centrality node number link originate terminate particular node weighted degree centrality node computed sum weight link originate terminate particular node degree centrality dci deﬁned lij 1 exists link bucket j zero otherwise weighted degree centrality wci deﬁned eq 2 wij weight link linking bucket bucket wij 0 bucket k not linked bucket dci n x lij n x lji 1 wci n x wij n x wji 2 7 0 10 20 30 40 11 11 9 9 2 3 4 5 6 7 8 rank degree centrality patti smith group tool parliament funkadelic velvet derground sonic youth minuteman love rocket craig armstrong figure 4 top eight degree centrality ranking based initial random linking 0 10 20 30 40 50 60 42 30 29 28 2 3 4 5 6 7 8 rank degree centrality public enemy velvet underground fishbone pixy sonic youth stooge parliament funkadelic tool figure 5 top eight degree centrality ranking user surfed system fig 4 show ranking top 8 bucket based degree centrality ranking network wa intially setup ranking case purely random no user traversal taken place case degree weighted degree centrality ranking fig 5 show top 8 ranking based degree centrality approximately 1041 direct traversal 15 user public enemy seen popular band according degree weighted degree centrality measure wa expected since public enemy wa access point network user also ﬁnd inﬂuential band velvet underground stooge cool hierarchical ranking since user entered network starting public enemy bucket make sense investigate bucket connection bucket mean validate network structure fig 7 give hierarchy popular band starting public enemy including secondary tertiary reinforced initially random link weight link ing every two band noted within parenthesis next band lower hierarchy band marked indicates initial random link ha reinforced 8 0 10 20 30 40 50 60 70 80 40 40 2 3 4 5 6 7 8 rank weighted degree centrality public enemy sonic youth pixy stooge smashing pumpkin velvet underground fishbone cool j figure 6 top eight weighted degree centrality ranking user surfed system 150 band graded two music expert scale 10 0 10 fying close relation band public enemy 0 signifying no relationship band ranking later normalized scale compute relationship weight every band fig 7 public enemy sum product normalized intermediary link weight order compare network weight expert opinion formalize procedure follows assume two bucket bi bj nected network shown fig 7 via path p length n ordered set p bk represents bucket path connects bi bj ple path identiﬁed any two bucket therefore set k path p pk eq 3 used compute weight relationship any bucket bi bucket bj generated hierarchical tree given w bh represents weight bucket bh predecessor path pg w bi bj k x n w bh 3 examined indirect link weight any bucket public enemy bucket bi assumed public enemy bucket case fig 8 show scatterplot expert network relationship value public emy correlation coefﬁcient network expert evaluation bucket relation public enemy wa found indicating relationship graph correspond least two expert judgment expert opinion need validation usage network could expected better reﬂect user taste 9 figure 7 hierarchical ranking band related public enemy 0 0 1 network expert export network figure 8 comparison expert network ranking band relationship public enemy 10 5 future research importance node ha gauged based degree weighted degree centrality measure would interesting perform analysis based principal nents clustering technique another system feature could decrementing weight rarely used link would help ﬁlter spurious link created initial random linking basis decrementing link weight need study option include time link ha not accessed frequency access link finally hebbian learning could implemented portion bucket instead entire bucket would allow bucket section content ﬁxed section content adapt hebbian learning imagine containing 2 high level number leaf element user link via link provided would aware not only bucket wa linked also section within bucket 6 conclusion implemented system automated linking information using collection smart object labeled bucket using set simple learning rule change link weight based user retrieval pattern bucket network gradually change structure user retrieve one bucket another via list recommended bucket evident result although collection bucket initially randomly linked adequate user traversal form meaningful linkage resembles user idea bucket related bucket centric node network happen either inﬂuential popular music band related public enemy band high degree weighted degree centrality wa found course analysis ranking based degree centrality wa susceptible change due drastic use even single user however weighted degree centrality offer graded stable approach random collection initially presented user would not return ideal result needed satisfy user information need possibility system returning ideal answer set user information need increase usage system usage needed create well suited network depends number bucket network also diversity user information need user information need limited scope user interested rock music meaningful network expected form fairly quickly 11 reference 1 johan bollen francis heylighen system restructure hypertext network valid user model new review hypermedia multimedia 1998 2 johan bollen michael nelson adaptive network smart object johan bollen michael nelson editor proceeding workshop distributed puting architecture digital library page vancouver canada august ieee 3 daniel crow barbara smith role knowledge adaptive interface system proceeding international conference intelligent user interface page orlando fl january 1993 4 donald hebb organization behavior john wiley new york 1949 5 michael nelson ckets smart object digital library phd thesis old dominion university norfolk va 2000 6 michael nelson gretchen gottlich david bianco sharon paulson robert binkley yvonne kellogg chris beaumont robert schmunk michael kurtz alberto accomazzi omar syed nasa technical report server internet research electronic network application policy 5 2 september 1995 7 michael nelson kurt maly bucket smart object digital library nications acm 44 5 may 2001 8 ben schafer joseph konstan john riedl recommender system november 1999 9 spin top 50 music band february 2002 12