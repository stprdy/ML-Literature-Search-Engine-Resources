25 jul 2010 reinforcement learning bittorrent system raﬁt hyunggon park mihaela van der schaar paloalto electrical engineering institute electrical engineering department network ewha woman university university california sunnyvale ca seoul korea los angeles ca research effort shown popular bittorrent protocol doe not provide fair resource reciprocation may allow paper propose like protocol replaces peer selection mechanism regular bittorrent protocol novel reinforcement learning based mechanism due inherent opration system involves repeated interaction among peer long period time peer efﬁciently identify well desirable collaborator learning behavior associated peer thus help peer improve download rate discourage improving fairness system model peer interaction work repeated interaction game explicitly consider strategic behavior peer peer applies forcement learning based mechanism us partial history observation associated peer statistical reciprocal behavior determine best response estimate corresponding impact expected utility policy determines peer resource reciprocation peer would maximize peer performance thereby making foresighted decision implemented proposed based mechanism incorporated existing bittorrent client performed extensive experiment controlled planetlab test bed result conﬁrm proposed protocol 1 promotes fairness term incentive peer contribution high capacity peer improve download completion time 33 2 improves system stability robustness reducing peer selection ﬂuctuations 57 3 discourages peer reduce 64 upload comparison regular bittorrent protocol 1 introduction content sharing protocol dominate trafﬁc internet thus become important part building scalable internet application 1 protocol used variety internet application content distribution 2 voice ip 3 streaming multimedia application 4 5 content distribution system fairness among peer important factor encourages peer actively rate disseminating content lead improved system performance however even bittorrent 6 one popular protocol used content distribution doe not provide fair resource reciprocation particularly node population heterogeneous upload bandwidth 7 10 strategy implemented 1 work wa done ucla bittorrent only exploit history making upload decision speciﬁcally upload decision made based recent observation resource reciprocation also implies upload decision short looking not decision not foresighted thus peer keep following policy only continuously uploads piece particular ﬁle associated peer long receives piece interest return however not always feasible irrespective peer willingness cooperate may not always piece peer interested 11 however behavior still perceived lack cooperation interacting peer addition ha shown bittorrent system not effectively cope selﬁsh peer behavior 12 14 optimistic unchoke mechanism optimistic unchoke mechanism enables peer continuously discover better peer leechers reciprocate resource provide major opportunity selﬁsh peer obtain data without uploading return mechanism may also lead unfairness system force peer interact peer unlike approach using tion history scheme proposed overcome limitation optimistic unchoke mechanism exploiting global history 15 17 however order maintain global history across peer approach require signiﬁcant communication overhead moreover reliability global history unclear peer may exhibit different reciprocation behavior different peer alternatively local private history upload behavior associated peer used several approach 11 18 20 approach reduce communication overhead focus system still maximizing immediate utility may le desirable maximizing utility peer repeatedly interact long period time paper model peer interaction network repeated interaction game repeated interaction reciprocating resource among several participant peer participant take action unchoke peer maximize long term reward cumulative download rate underlying state environment change stochastically contingent upon decision participant model peer 2 apply rl make upload decision explicitly consider strategic behavior peer peer observe partial historical information reciprocation behavior associated peer based information peer apply strategy estimate future expected reward determine accordingly best response future expected reward determined using various type interactive learning technique use reinforcement learning since enables peer improve peer selection strategy based solely knowledge past interaction not knowledge complete reciprocation behavior peer entire network reinforcement learning enables peer forecast impact current peer selection future expected utility maximize therefore peer selection mechanism replaces optimistic unchoke mechanism regular bittorrent protocol note protocol support non medium transmission scenario ha received le attention multimedia research community compared demand medium streaming scenario type protocol requested content need completely downloaded displayed thus ordering piece downloaded ﬁrst not important overall time required completely downloading content important note however proposed protocol easily adapted medium streaming application using existing technique 21 23 proposed protocol consists three main process learning process provides updated information statistical behavior associated peer source reciprocation policy finding process computes peer tion policy based reinforcement learning decision process determines associated peer unchoked choked every rechoke period based peer selection policy implemented proposed protocol top actual bittorrent client performed extensive experiment controlled planetlab test bed new proposed algorithm executed simply policy modiﬁcations existing client no change bittorrent protocol tocol doe not demand full adoption sparse adoption peer selection mechanism 7 run any number peer network evaluated quantiﬁed performance proposed protocol compared performance regular bittorrent protocol based experimental result proposed protocol provides following advantage regular bittorrent protocol 1 discourages limiting upload cooperative peer 2 promotes cooperation among peer 3 improves fairness peer contribute source higher upload capacity achieve higher download rate peer contribute fewer resource may achieve lower download rate 4 improves system robustness minimizing impact contributing peer mance 5 improves stability peer selection mechanism affect directly performance system rest paper organized follows section ii brieﬂy describe bittorrent system section iii brieﬂy deﬁne game adopted reinforcement learning solution describe peer selection mechanism section iv present design proposed protocol detail protocol implementation discussed section experimental result presented tion vi finally discus related work section vii conclusion drawn section viii ii bittorrent overview section brieﬂy overview bittorrent col 6 bittorrent protocol often adopted content distribution efﬁciently scale large number participating client content distribution process begin content provider divide possessed data content multiple piece chunk provider creates metainfo ﬁle contains information necessary initiate content downloading process metainfo ﬁle includes address tracker play role coordinator facilitates peer discovery client downloads metainfo ﬁle joining torrent swarm group peer interested particular content connects tracker receive peer set consists randomly selected peer currently exchanging content peer set may include leechers peer still downloading content piece seed peer entire content upload peer client connect exchange reciprocate content piece associated peer peer peer set reciprocating content piece leecher determines set peer among peer set load content piece peer selection determined choking mechanism determined choking decision bittorrent leechers adopt two choking mechanism resource reciprocation mechanism optimistic unchoke mechanism mechanism prefers peer upload piece highest rate among associated peer speciﬁcally every 10 second rechoke period leecher check current download rate associated peer selects peer uploading piece highest rate leecher uploads only selected associated peer choking blocking download rest rechoke period available upload bandwidth equally divided unchoked peer optimistic unchoke mechanism reserve portion available upload bandwidth provide piece 3 peer randomly selected purpose anism enable leechers continuously discover better peer associate bootstrap newly joining leechers mechanism optimistic unchokes randomly rotated among associated peer typically every three rechoke period allowing enough time leechers demonstrate cooperative behavior number unchoked peer slot may vary depending speciﬁc implementation ﬁxed dynamically changed function available upload bandwidth seed deploy different choking mechanism already completed download content common tation based schedule aiming distribute data uniformly implementation also deployed implementation iii reinforcement learning resource reciprocation network peer system often make repeated cisions select unchoked peer given dynamically changing environment evolution peer interaction across various rechoke period modeled repeated interaction game assume stochastic game played long period time order support several popular application video streaming ﬁle delivery time slot rechoke period every peer state need select optimal action peer choose action independently simultaneously rechoke period peer rewarded taking action transit next state reward received peer state transition contingent upon peer state action repeated multiple peer interaction peer only observe partial history associated peer reciprocation behavior based observation peer adopt peer selection policy estimate future expected reward identify best response estimation future expected reward computed using different type learning scheme paper use reinforcement learning 24 allows peer improve peer selection strategy using only knowledge past reciprocation without knowing complete knowledge reciprocation behavior associated peer network formally reinforcement learning environment represented tuple p set peer game peer game denoted 1 set state proﬁles peer game sm sj state space peer joint action space aj action peer selection space peer p 0 1 state transition probability function map state proﬁle time next state proﬁle 1 time 1 given corresponding joint action note discrete measured time slot finally r reward vector function deﬁned mapping state proﬁle time corresponding joint action vector element reward particular peer ﬁnd optimal policy game stochastic game model 25 26 peer may require entire history interaction among peer network however may infeasible real network unlike game ﬁnding policy only requires peer history observation experience interaction therefore expect peer selection policy suboptimal history observation network time deﬁned h 0 0 r 0 r 1 summarizes previous state action reward peer network time h set possible history time since peer j not access entire history observation h rather portion h set observation peer j access expressed oj oj note current state sj always observable sj state transition probability calculated oj 1 state space peer j sj state peer j represents set resource received peer cj cj denotes set peer associating peer thus may represent uploading behavior associated peer equivalently capture peer j download rate associated peer upload rate peer peer j time denoted lij proposed protocol uploading behavior peer observed peer j denoted sij deﬁned sij 1 lij θj 0 otherwise 2 θj threshold peer thus sij expressed one bit state space peer j expressed sj snj sij 0 1 3 n denotes number peer j associated peer cj therefore state sj capture uploading behavior associated peer time 2 action space peer j aj action peer j represents set peer selection decision peer selection decision peer j peer time denoted aji deﬁned aji 0 peer j choke peer 1 otherwise 4 order minimize computational complexity consider sij 0 1 paper however granularity state easily extended 4 thus aji also expressed one bit action space peer j expressed aj ajn aji 0 1 5 hence action aj vector consists peer j peer selection decision associated peer time proposed protocol assume peer j able unchoke nu peer note peer j allocates amount upload bandwidth unchoked peer variable case future explored thus bandwidth allocated unchoked peer peer j time determined lji bj maximum upload bandwidth available peer j 3 state transition probability peer j state transition probability represents probability action aj aj peer j state sj time lead another state sj 1 time expressed paj sj sj 1 pr sj 1 aj 6 peer j estimate state transition probability function based history interaction sj aj sj 1 may stored transition table deploy empirical frequency based algorithm estimate state transition probability function paper presented section algorithm 27 also used 4 reward peer j rj reward peer state total estimated download rate state thus reward peer state sum estimated download rate associated peer speciﬁcally reward peer j state sj expressed rj sj sj lij x lij 7 two vector x set reward peer system denoted r rn 5 policy πj policy πj obtained reinforcement learning provide ciﬁc action aj peer j state sj time πj sj thus aj πj sj action policy provides peer j mined maximize cumulative discounted expected reward deﬁned peer j state sj time tc given discount factor γj rf j sj tc x γ j rj sj 8 thus policy πj map state sj action aj πj sj action maximizes rf j sj tc policy deployed peer selection algorithm enables peer maximize utility policy πj obtained using method value iteration policy iteration 28 learning process section fig 2 policy finding process section algorithm 1 fig 3 network reciprocation information optimal policy unchoked peer aj associated peer upload rate j ij l j j j j p r j π decision process section fig 4 fig main process proposed protocol design environment dynamic keep changing practice thus policy need updated frequently may require high computational complexity hence important reduce complexity ﬁnding policy proposed algorithm efﬁciently deployed iv protocol design section describe proposed protocol design replaces optimistic unchoke peer tion mechanism deployed regular bittorrent system peer selection mechanism protocol design summarized fig protocol consists three main process running parallel 1 learning process provides updated tion statistical behavior associated peer resource reciprocation oj process necessary since peer reciprocation behavior not foretold therefore peer required act environment order gain observation transition function reward associated peer 2 policy ﬁnding process computes policy using reinforcement learning process need running entire downloading process change peer reciprocation behavior identiﬁed ing process result policy obtained previous time slot outdated 3 decision process determines decision peer selection rechoke period based policy observed state detail process discussed next learning process difﬁcult estimate learn peer state reward state transition probability due nounced information network scalability constraint varying network dynamic etc proposed protocol peer learns peer state reward state transition probability using observation peting peer past thus peer need update information regularly learning process downloading content associated peer learning process consists two main method compute estimated reward state transition probability depicted fig 2 1 computing reward reward peer j represents total download rate associated peer estimated peer reward calculation method associated peer 5 learning process reciprocation information state transition probability calculation ij l associated peer upload rate j j j j j p r reward calculation transition table unchoked peer j fig learning process classiﬁed two type based available information resource reciprocation history associated peer reciprocated resource peer j referred peer reciprocation history peer j estimate upload rate based weighted average past upload rate sample reduce ﬂuctuation induced protocol network dynamic sampled upload rate associated peer speciﬁcally peer j estimate upload rate ˆ lij peer based recently observed resource reciprocation lij ˆ lij 1 lij 1 1 ˆ lij 9 αj denotes weight recent resource rocation associated peer not yet reciprocated resource peer j referred peer without resource reciprocation history peer j initializes tion peer optimistically estimating reciprocate resource high probability high load rate enables peer j efﬁciently discover additional peer bootstrap newly joining peer important efﬁciency system whenever peer j uploads peer without resource reciprocation history peer doe not upload j return peer j reduces peer presumed upload rate provides j conﬁdence particular peer may not actively reciprocate data also prevents associated peer taking advantage peer optimistic initialization possible note 29 not possible design either since peer identiﬁed ip address 2 finding state transition probability state transition probability updated every rechoke period thus peer capture resource reciprocation behavior associated peer every rechoke period 1 peer j store triplet associated peer sij aji sij 1 peer j store triplet associated peer reduce peer set discussed later section peer uploaded peer j time design compute state transition probability function based cal frequency assume state transition peer independent thus state transition probability paj sj sj 1 sj snj sj 1 1 snj 1 given action policy finding process optimal policy peer set reduction mdp solver reciprocation information j j j j p r j π j c fig policy ﬁnding process aj ajn expressed paj sj sj 1 n pr sij 1 aji policy finding process policy ﬁnding process run parallel learning process using information obtained ing process process depicted fig finding policy based reinforcement learning frequently may result high computational complexity requirement number associated peer becomes large hence order practically implement proposed algorithm critical reduce number peer peer considers reciprocation see section iii therefore process need begin reducing set associated peer ﬁnds policy πj maximizes cumulative discounted expected reward eq 8 reduced peer set 1 reducing associated peer set discussed section iii order ﬁnd πj efﬁciently important peer j reduce set associated peer selecting peer reciprocate resource higher probability higher upload rate reduced peer set speciﬁcally peer j computes expected reward download rate ˆ lij peer deﬁned ˆ lij 1 lij pr 10 pr denotes probability resource cation peer based computed ˆ lij peer j reduces associated peer set iteratively eliminating peer smallest ˆ lij associated peer set algorithm peer set reduction presented algorithm algorithm computes ˆ lij 10 line associated peer ordered based computed ˆ lij line 5 peer set reduction performed loop line reduces peer set peer every iteration loop algorithm selects peer smallest ˆ lij value denoted g line 8 reduced group peer obtains policy πj g peer g line 9 based πj g calculates probability peer unchoked line given calculated probability remove peer lowest probability unchoked line 18 algorithm run line 7 6 algorithm 1 reduction algorithm peer j 1 input cj set associated peer peer j targeted size reduced peer set constant lij reward download rate peer pr skj probability skj pr resource reciprocation probability peer constant 2 output reduced set peer j 3 4 ˆ lij lij pr 5 order cj order ˆ lij 6 j 7 8 g n 9 calculate j g set g 10 k j k 11 pr j probability j unchokes k based j g 12 skj 13 j g skj 1 14 pr j j pr skj 15 order g order pr j value 16 17 18 j j 19 return j decision process optimal policy action finder state monitor initialization phase associated peer upload rate j j j π ij l j action fig decision process 2 scaling scaling reward considered case number reciprocation sample small comparison difference lowest highest upload rate expressed network decision process decision process includes two phase initialization phase rl reinforcement learning phase depicted fig 4 1 initialization phase since no information ciated peer available newly joining peer j peer j begin adopting regular bittorrent mechanism mechanism optimistic unchoke mechanism initialization phase enables peer collect information reward state transition probability respect associated peer phase j discovers new peer downloads peer ﬁrst time j peer discovery slowed see section v detail replaces regular bittorrent peer selection mechanism operates rl phase 2 rl phase phase peer j determines decision peer selection based policy obtained policy ﬁnding process every rechoke period peer j determines current state sj corresponding action aj based policy πj aj πj sj note aj set decision peer selection peer j either choke unchoke implementation section discus proposed protocol prototype study determine several design parameter client implemented top enhanced ctorrent client version 30 enhance original client client operate mode reciprocates resource using proposed based mechanism regular mode reciprocates resource based regular bittorrent peer selection anism add functionality mode support proposed protocol request speciﬁcally mode implemented three different process discussed section iv learning process learning process consists two method reward calculation method state transition probability tion method section discussed estimate state transition probability section describe reward calculation method reward calculation method applied differently depending associated peer type peer without reciprocation history 1 peer reciprocation history calculating reward peer resource reciprocation history sample lij obviously ﬂuctuate rechoke time period due experienced network dynamic ﬂuctuation lij sample may atypical thus typical upload rate peer reciprocation history estimated based weighted average sample 9 estimated reward peer j obtained peer recent resource reciprocation considered important past reciprocation set αj based several trial αj small ǫ various set experiment see detail section vi verify smaller αj achieves le ﬂuctuation reward thus set αj fig 5 show example sampled upload rate lij peer network correspondingly estimated upload rate ˆ lij measured another associated peer network clearly observe le variation lij computation ˆ lij 7 35 40 45 50 55 60 65 70 75 80 1000 1500 2000 2500 3000 3500 4000 reward estimation upload sample index li j li j fig upload sample reward estimation 2 peer without reciprocation history no resource reciprocation history peer leecher j mistically initializes information reward reciprocation probability associated peer speciﬁcally initial estimated upload rate set highest upload rate lmax ij network lij ij probability reciprocation j initiated 1 pr optimistic ization enables newly joining leechers download almost immediately peer j need continue updating initially assumed reward every event peer j uploads resource peer peer doe not upload resource peer j peer j estimate reward peer peer j assume ˆ lij satisﬁes ˆ lij n ˆ lij n ˆ lij n ˆ lij n 1 11 n denotes number event ii ˆ lij n decrease exponentially approach 0 several attempt assumption mean ratio estimated rate two consecutive event increasing function also implies increasing uncertainty peer reciprocation behavior moreover assumption ii required prevent behavior including thus function satisfying ii form f n βg n lmax ij 12 β 1 constant g n 1 function grows faster linear function implementation use function f n lmax ij function satisﬁes property ii shown fig policy finding process shown section iv every iteration policy ﬁnding process associated peer set ﬁrst reduced based 1 2 3 4 5 6 7 8 10 10 10 0 10 2 10 4 10 6 10 8 n number attempt n li j max guessing reduction function li j li j li j li j fig guessing reduction function experiment observe reduced size peer set 7 peer ﬁnding policy slows client performance thus implementation set size reduced peer set seven 7 algorithm computed policy hold additional three rechoke period determined considering tradeoff time enough reciprocation time capturing network dynamic decision process initialization phase rl phase decision process implemented follows 1 initialization phase initialization phase peer j make decision peer selection based regular bittorrent mechanism doe not enough information calculate policy order determine duration initialization phase study extensive experiment result include ﬂash crowd scenario well steady state scenario experiment number peer not uploaded peer j beginning downloading process counted every rechoke period fig 7 show median counted number peer collected leechers network time rechoke period several experiment scenario fig 7 show peer counted value exponentially decreasing stabilized quickly peer j switch initialization phase rl phase plementation peer j count number peer without reciprocation history within every rechoke period count reduces one duration three rechoke period two consecutive duration six rechoke period peer j switch continuous phase begin adopt based strategy based experiment peer switch initialization phase continuous phase approximately 60 rechoke period later scenario approximately 36 rechoke period later 8 20 40 60 80 100 120 140 160 180 200 5 10 15 20 25 30 35 40 45 50 peer without history unchoking period 10 second number peer without history 2 optimistic unchokes 3 rechoke period regular bittorrent bittorrent fig discovering rate peer without history scenario however different network setting might lead different duration initialization phase 2 rl phase rl phase peer selection decision made based rl policy every ten second regular bittorrent selected peer unchoked rechoke period ten second minimum number unchoked peer four number unchoked peer increase 1 peer make peer selection decision doe not saturate upload capacity 2 upload bandwidth peer make peer selection decision higher comparison peer interacts compare performance proposed protocol regular bittorrent implemented enhanced ctorrent client minimum number unchocked slot regular bittorrent implementation also set four number slot increase peer upload capacity not saturated implementation one unchoke slot always reserved optimistic unchokes rotated every three rechoke period vi experimental evaluation perform extensive experiment controlled testbed order evaluate property proposed protocol methodology experiment performed planetlab perimental platform 31 utilizes node machine located across globe execute experiment secutively time set node unless otherwise speciﬁed default implementation leecher seed regular bittorrent system deployed upload capacity node artiﬁcially set cording bandwidth distribution typical bittorrent leechers 7 distribution wa estimated based pirical measurement bittorrent swarm including unique bittorrent ip since several node 14 40 71 110 175 250 350 500 1000 1500 2000 2500 3000 3500 4000 upload rate download time second bittorrent regular bittorrent fig leecher download time incapable match target upload capacity determined bandwidth distribution scale upload capacity relevant experimental parameter ﬁle size however not set limitation download bandwidth peer begin download process simultaneously emulates ﬂash crowd scenario initial seed stayed connected entire experiment provide synthetic churn constant capacity leechers disconnect immediately completion downloading entire video ﬁle reconnect new comer immediately ing entire video ﬁle enables experiment upload bandwidth distribution duration experiment unless otherwise speciﬁed experiment host 104 planetlab node 100 leechers 4 seed combined capacity 128 serving 99 mb video ﬁle experiment result single rl leecher network start experiment only single leecher adopts protocol rest leechers network run regular bittorrent no network note common scenario wa tested proposed protocol 7 32 fig 8 compare download time single leecher adopting protocol regular bittorrent protocol function leecher upload capacity 7 trial fig 8 33 separate boxplots depicted different scenario top bottom box represent percentile sample download time respectively 7 run experiment marker inside box represent median vertical line extending box represent maximum minimum sample download time within range time box height box boarder outlier marked individually mark result fig 8 provide several insight operation proposed protocol high low capacity leechers beneﬁt 9 60 80 100 120 140 160 180 200 0 1 2 3 time rechoke period number change dynamic peer selection mechanism bittorrent regular bittorrent fig peer selection mechanism dynamic 12 improvement download time performance indicated median improvement provides leechers incentive adopt proposed protocol moreover strategy doe not simply improve performance also provides consistent performance across multiple trial selecting unchoke peer based historical behavior information proposed protocol avoids randomization present regular bittorrent optimistic unchoke implementation cause unstable peer selection result slow convergence peer selection mechanism stability study peer selection mechanism stability stability peer selection mechanism affect directly performance system since peer start upload another peer take time till peer reach full capacity bittorrent protocol 6 author suggests allowing 30 second peer reach full capacity thus system ha high ﬂuctuation peer selection many occurrence peer not reach full capacity compare peer selection ﬂuctuations two protocol stable peer selection mechanism minimize peer selection ﬂuctuations measured peer selection ﬂuctuations comparing peer selection decision two consecutive rechoke period measuring difference two decision replacing unchoked peer different peer count one change fig 9 indicates average number peer selection change function time rechoke period unit single peer show average number peer selection change lower enhanced network majority time average change regular bittorrent network compared average change network thus peer selection mechanism stable peer selection mechanism regular bittorrent reducing peer selection ﬂuctuations average 57 note optimistic unchoke mechanism contributes 1 change every 3 rechoke period thus contributing average change 1 3 per time unit regular bittorrent network therefore decrease optimistic 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 2000 4000 6000 8000 10000 12000 14000 peer group index grouping ul download time second download time bittorrent regular bittorrent 31 33 fig download completion time leechers choke not main reason stability improvement peer selection mechanism instead replacing mechanism relies history associated peer mechanism relies long history performs foresighted unchoking decision main contributor stability experiment result performance leechers network without compare system consisting leechers adopting regular bittorrent protocol system consisting leechers running mode adopting based strategy section assume no network note experiment hosted only 50 leechers fig 10 show download completion time leechers group leechers upload capacity separate boxplots depicted different scenario result show clear performance difference among leechers fastest 20 leechers leechers slowest 80 leechers leechers signiﬁcantly improve load completion time leechers upload capacity least improve download completion time 33 median unlike regular bittorrent system leechers determine peer selection decision based myopic us only last reciprocation history leechers determine peer tion decision based long term history enables leechers estimate behavior associated peer accurately moreover since part peer selection decision randomly determined regular bittorrent high probability high capacity leechers need reciprocate leechers 7 however randomly determined peer selection decision signiﬁcantly reduced proposed approach random decision taken only initialization phase order collect reciprocation history newly joined peer result high capacity leechers increase theie probability reciprocate resource high capacity leechers 10 40 42 44 46 48 50 40 42 44 46 48 50 unchoking distribution network peer index peer index 40 42 44 46 48 50 40 42 44 46 48 50 unchoking distribution regular bittorrent network peer index peer index 2 4 6 8 10 2 4 6 8 10 fig unchokes among 20 fastest peer 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 10 0 10 1 10 2 peer group index grouping ul download rate upload rate bittorrent download rate regular bittorrent download rate maximum upload rate fig download rate versus upload rate conﬁrmed result fig 11 show unchoking percentage among 20 high capacity leechers comparing two different system clearly observed collaboration among high capacity leechers improves leechers adopt strategy thus conclude strategy improves incentive mechanism bittorrent network leecher contributes network achieves higher download rate recent study 7 9 19 show regular bittorrent protocol suffers unfairness particularly high capacity leechers fig 12 compare upload rate average download rate leechers ratio value indicate degree fairness system result fig 12 show fairness improved network since leechers increased download rate getting closer upload rate spite restriction limited seed upload rate hand network download rate leechers decrease getting close upload rate 36 compared regular bittorrent system however peer slowed strategy still download faster upload rate experiment result performance leechers network section investigate effectively proposed protocol prevent selﬁsh behavior note strategy show similar performance leechers upload content network 5 10 15 2 x 10 4 number system second download time bittorrent regular bittorrent 8 20 16 fig download completion time 5 10 15 0 1 2 3 4 5 6 number system percentage percentage upload given bittorrent regular bittorrent fig percentage downloads contributing leechers includes show improved fairness hence section focus studying rider punished due selﬁsh behavior fig 13 show time complete downloading video ﬁle network consisting 50 contributing leechers increasing number 5 10 15 rider compare result network regular bittorrent network fig 13 conﬁrms network leechers able effectively penalize take longer time rider complete downloads requires 8 time measured median comparison regular bittorrent protocol leechers efﬁciently capture selﬁsh behavior thus unchoke rider signiﬁcantly lower probability hence rider download content mainly seed not leechers result shown fig 14 also conﬁrm leechers regular bittorrent network upload approximately time data rider compared network also show network robust selﬁsh behavior peer network operating regular bittorrent protocol example network 15 11 leechers regular bittorrent system upload total upload capacity only upload total upload capacity network thus reducing 64 upload capacity therefore experiment result conﬁrm based strategy provides incentive adoption improves peer download rate improves stability peer selection mechanism improves collaboration among high capacity peer improves fairness system discourages behavior vii related work fairly large number architecture support distribution multimedia internet ha proposed last year within scientiﬁc community 34 38 speciﬁcally bittorrent protocol dominates trafﬁc internet 1 ha highly inﬂuential design development many modern commercial streaming system 4 5 39 extensive research ha focused modeling analyzing performance bittorrent system since main mechanism design rationale bittorrent protocol ﬁrst described 6 qiu srikant 40 studied ﬂuid analytical model bittorrent system analytically studied choking mechanism affect peer performance showed optimistic unchoke mechanism may allow also claimed system strategy eventually converges nash equilibrium fairness achieved peer download upload capacity however shown result consistent existing work 7 9 19 32 choking mechanism bittorrent may fail attain fairness realistic swarm fan et al 41 characterized design space protocol capturing fundamental tradeoff performance fairness also study tradeoff show strategy improves fairness system cost reduced download rate leechers encourages leechers contribute resource maximize upload rate levin et al 32 propose auction base model model peer selection mechanism claiming bittorrent us auction decide peer unchoke not widely believed researcher studied feasibility behavior shneidman et al 42 showed possible bittorrent system identiﬁed form strategic manipulation based sybil attack uploading garbage data liogkas et al 12 implemented three exploit allow obtain higher download rate speciﬁc circumstance locher et al 13 bitthief extended work showing achieve higher download rate even absence seed similarly sirivianos et al 14 showed maintain view system ha much higher probability receive data seed via optimistic unchoke protocol replaces optimistic unchokes important vulnerability identiﬁed study policy based unchokes fairness bittorrent system wa studied well geo et al 9 showed lack fairness bittorrent system piatek et al 7 observed presence signiﬁcant altruism bittorrent peer make contribution not directly improve performance 19 identiﬁed potential lack fairness proposed buddy protocol match peer similar bandwidth legout et al 10 studied clustering peer similar upload bandwidth observed seed provisioned peer tend complete downloads approximately time regardless upload rate moreover capacity peer assist seed disseminate data capacity peer happen strategy based history peer beneﬁt strategy only continuously upload piece long receives piece interest return piatek et al 11 showed not always possible peer no piece offer work also considers unfairness bittorrent system show proposed approach improve fairness using history based strategy order reduce encourage collaboration various reputation system proposed payment tems 43 44 enable peer earn credit according uploads peer proposed however practice system require centralized entity prevent cheating thus arguably scalability tations overcome weakness payment system various design reputation system proposed 11 15 17 45 system peer make choking decision base private history well globally shared history however reputation system require signiﬁcant communication overhead maintain global history moreover no guarantee peer express behavior different peer different attribute researcher also acknowledged importance contribution incentive system proposed different alternative anagnostakis et al 46 suggested extend bittorrent incentive exchange among ring peer providing incentive cooperate piatek et al 7 proposed bittyrant client applies new peer selection mechanism reallocates upload bandwidth maximize peer download rate however whereas appearance single bittyrant client bittorrent system reveals improving performance case widespread adoption system performs severe loss efﬁciency 47 levin et al 32 proposed propshare client reward peer proportional share bandwidth show propshare client improves performance swarm consisting predominately bittorrent peer however majority peer run propshare client no 12 clear difference performance comparison regular bittorrent protocol addition system relay history aim maximize immediate utility not utility show only suboptimal performance best knowledge ﬁrst propose strategy replace existing mechanism deployed bittorrent protocol maximizing utility participating leechers viii conclusion paper propose protocol place optimistic unchoke peer selection mechanism regular bittorrent protocol novel mechanism proposed protocol evolution peer teractions across various rechoke period modeled repeated interaction game repeated interaction peer observe partial historical tion associated peer reciprocation behavior peer estimate impact future reward adopt best peer selection action estimation impact expected future reward performed using allows peer improve peer selection mechanism using only knowledge past interaction without knowing complete reciprocation behavior peer network experiment result show proposed protocol improves stability peer selection mechanism prof collaboration among high capacity peer improves fairness system enhances robustness network effectively discouraging behavior importantly improves downloading rate peer deploying protocol reference 1 ipoque ipoque internet measurement 2 bittorrent bittorrent 3 skype skype 4 pplive pplive 5 uusee uusee 6 cohen incentive build robustness bittorrent 2003 7 piatek isdal anderson krishnamurthy mani incentive build robustness bittorrent nsdi 2007 8 bharambe herley padmanabhan analyzing proving bittorrent network performance mechanism infocom 2006 9 guo chen xiao tan ding zhang ments analysis modeling system imc 2005 10 legout liogkas kohler zhang clustering sharing incentive bittorrent system sigmetrics 2007 11 piatek isdal krishnamurthy anderson one hop reputation peer peer ﬁle sharing workload nsdi 2008 12 liogkas nelson kohler zhang exploiting bittorrent fun not proﬁt iptps 2006 13 locher moor schmid wattenhofer free riding bittorrent cheap 2006 14 sirivianos park chen yang bittorrent network large view exploit iptps 2007 15 buchegger le boudec robust reputation system mobile network economics system 2004 16 xiong liu peertrust supporting trust electronic ieee transaction knowledge data engineering 16 7 2004 17 yang zhang li dai empirical study riding behavior maze iptps 2005 18 edonkey edonkey 19 collaboration bittorrent system networking 2009 20 liogkas majumdar team incentive bittorrent system icccn 2009 21 dana li harrison chuah bass bittorrent assisted streaming system ieee workshop multimedia signal processing 2005 22 vlavianos iliofotou faloutsos bitos enhancing torrent supporting streaming application infocom 2006 23 choe schuff dyaberi pai improving vod server efﬁciency bittorrent multimedia 07 proceeding international conference multimedia 2007 24 hu wellman multiagent reinforcement learning theorectical framework algorithm ic machine learning 1998 25 fudenberg levine theory learning game cambridge mit press 1999 26 shapley stochastic game national academy science united state america 1953 vol 39 27 park van der schaar framework foresighted resource reciprocation network ieee trans multimedia vol 11 no 1 pp 2009 28 bertsekas dynamic programming stochastic control demic p 1976 29 feldman papadimitriou chuang washing system pin 2004 30 31 bavier bowman chun culler karlin muir peterson roscoe spalink wawrzoniak operating system support network service nsdi 2004 32 levin lacurts spring bhattacharjee bittorrent auction analyzing improving bittorrent incentive sigcomm 2008 33 robert mcgill larsen variation box plot american statistician vol 32 pp 1978 34 chu rao seshan zhang enabling conferencing application internet using overlay muilticast architecture sigcomm 2001 35 banerjee bhattacharjee kommareddy scalable tion layer multicast sigcomm 2002 36 tran zigzag efﬁcient scheme medium streaming infocom 2003 37 castro druschel kermarrec nandi rowstron singh splitstream content distribution cooperative environment sosp 2003 38 rejaie ortega pal adaptive layered streaming 2003 39 zhang liu li shing peter yum overlay network live medium streaming infocom 2005 40 qiu srikant modeling performance analysis network sigcomm 2004 41 fan chiu lui delicate tradeoff like file sharing protocol design icnp 2006 42 shneidman parkes rationality peer peer network iptps 2003 43 hearn experience deploying emergent network iptps 2002 44 vishnumurthy chandrakumar sirer karma secure economic framework resource 2003 45 qiao lian yu peng mao yang zheng zhang yafei dai xiaoming li robust incentive via iptps 2006 46 anagnostakis b incentive mechanism file sharing icdcs 2004 47 carra neglia michiardi impact greedy strategy bittorrent network case bittyrant 2008 60 80 100 120 140 160 180 200 0 1 2 3 time rechoke period number change dynamic peer selection mechanism rl bittorrent regular bittorrent decision process optimal policy action finder state monitor initialization phase associated peer upload rate j j j π ij l j foresighted action 20 40 60 80 100 120 140 160 5 10 15 20 25 30 35 40 45 50 discovering ratio new peer trough bittorrent unchoking period 10 second number peer not discovered regular bittorrent strategy steady state regular bittorrent steady state strategy 2 optimisic unchokes per 3 rechoke period