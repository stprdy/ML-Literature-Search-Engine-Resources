received 20 february 2023 accepted 16 march 2023 date publication 27 march 2023 date current version 3 april digital object identifier machine learning operation mlops overview definition architecture dominik niklas kühl sebastian 71139 ehningen germany system artificial intelligence university bayreuth 95447 bayreuth germany corresponding author niklas kühl kuehl work wa supported part deutsche forschungsgemeinschaft dfg german research foundation grant 491183248 part open access publishing fund university bayreuth abstract final goal industrial machine learning ml project develop ml product rapidly bring production however highly challenging automate operationalize ml product thus many ml endeavor fail deliver expectation paradigm machine learning operation mlops address issue mlops includes several aspect best practice set concept development culture however mlops still vague term consequence researcher professional ambiguous address gap conduct research including literature review tool review expert interview result investigation contribute body knowledge providing aggregated overview necessary principle component role well associated architecture workflow furthermore provide comprehensive definition mlops highlight open challenge field finally work provides guidance ml researcher practitioner want automate operate ml product designated set technology index term devops machine learning mlops operation workflow orchestration introduction machine learning ml ha become important technique leverage potential data allows business innovative 1 efficient 2 sustainable 3 however success many productive ml application setting fall short expectation 4 large number ml project many ml proof cept never progressing far production 5 research perspective doe not come surprise ml community ha focused extensively building ml model not building ml product b providing necessary coordination resulting often complex ml system component infrastructure including role required automate operate ml system setting 6 instance many industrial application data scientist still manage associate editor coordinating review manuscript approving publication wa alberto cano ml workflow manually great extent resulting many issue operation respective ml solution 7 address issue goal work examine manual ml process automated ized ml proof concept brought production work explore emerging ml neering practice machine learning operation addressing issue designing maintaining productive ml take holistic perspective gain common understanding involved component principle role architecture existing research shed some light various specific aspect mlops holistic conceptualization generalization clarification ml system design still missing different perspective conception term mlops might lead derstandings miscommunication turn lead error overall setup entire ml system thus ask research question rq mlops 31866 work licensed creative common license information see volume 11 2023 kreuzberger et al machine learning operation mlops overview definition architecture answer question conduct research endeavor identify important principle mlops b carve functional core component c light role necessary successfully implement mlops derive general architecture ml system design combination insight result definition mlops contributes common understanding term related concept therefore hope positively impact academic practical discussion providing clear guideline fessionals researcher alike precise responsibility insight assist allowing proof concept make production fewer error system design finally enabling robust prediction environment remainder article structured follows first elaborate necessary foundation related work field next give overview utilized methodology consisting literature review tool review interview study present insight derived application methodology conceptualize providing unifying definition conclude paper short summary limitation outlook ii foundation devops past different software process model ment methodology surfaced field software neering prominent example include waterfall 8 agile manifesto 9 methodology similar aim namely deliver software product cept called devops emerged year aim reduce issue software development 10 11 devops pure methodology rather sent paradigm addressing social technical issue organization engaged software development ha goal eliminating gap development ations emphasizes collaboration communication knowledge sharing devops promotes automation tactic continuous integration continuous delivery continuous deployment enabling fast frequent reliable release moreover designed ensure tinuous testing quality assurance continuous monitoring logging feedback loop due commercialization devops many devops tool emerging differentiated six group 12 13 collaboration knowledge sharing slack trello gitlab wiki source code management github gitlab build process maven continuous integration jenkins gitlab ci deployment automation kubernetes docker itoring logging prometheus logstash cloud environment increasingly equipped devops tooling designed cloud use facilitating efficient generation value 14 novel shift towards devops developer need care develop need operate well empirical figure overview methodology result demonstrate devops ensures better software ity 15 people industry well academic gained wealth experience software engineering using devops experience used automate operationalize ml iii methodology derive insight academic knowledge base also drawing upon expertise practitioner field apply approach depicted figure first step conduct structured literature review 16 17 obtain overview relevant research furthermore review relevant tooling support field mlops gain better understanding technical component involved finally conduct interview 18 19 expert different domain basis conceptualize term mlops orate finding synthesizing literature interview next chapter result literature review ensure result based scientific knowledge conduct systematic literature review according method webster watson 16 kitchenham et al 17 initial exploratory search define search query follows devops cicd continuous integration continuous delivery continuous deployment machine learning mlops query scientific database google scholar web science science direct scopus association information system elibrary mentioned use devops ml mlops continuous tices combination ml relatively new field academic literature thus only available time research le gain experience area search included literature well search wa formed may 2021 resulted retrieved article screened 194 paper detail group volume 11 2023 31867 kreuzberger et al machine learning operation mlops overview definition architecture table list evaluated technology 27 article selected based inclusion exclusion criterion term mlops devops combination ml wa described detail article wa written english 27 article tool review going 27 article eight interview ous tool framework commercial cloud ml service identified tool framework ml service reviewed gain understanding 31868 volume 11 2023 kreuzberger et al machine learning operation mlops overview definition architecture table list interview partner technical component consist overview identified tool depicted table interview study answer research question insight practice conduct expert interview according myers newman 18 one major aspect research design expert interview choosing appropriate sample size 20 apply theoretical sampling approach 21 allows u choose experienced interview partner obtain data data provide meaningful insight limited number interview get quate sample group reliable insight use social network identify experienced ml professional profound mlops knowledge global level gain insight various perspective choose interview partner different organization industry different country nationality well different gender interview conducted no new category concept emerge analysis data according glaser strauss 21 stage called theoretical total conduct eight interview expert pseudonymized α θ whose detail depicted table interview conducted june august regard interview design prepare structured guide several question documented interview script 18 interview soft ing used question probe interviewee chain 19 methodical approach allowed u gain additional insight experience interviewee required view recorded transcribed evaluate interview transcript use open coding scheme 20 open coding process allows data broken analytical manner conceptually ilar topic grouped category gories category called code concept identified appeared multiple time different interview 21 iv result apply described methodology structure ing insight presentation important principle resulting instantiation component description essary role well suggestion architecture workflow resulting combination aspect finally derive conceptualization term vide definition mlops volume 11 2023 31869 kreuzberger et al machine learning operation mlops overview definition architecture figure implementation principle within technical component principle principle viewed general basic truth value guide behavior context mlops principle guide thing realized mlops closely related term best practice sional sector based outlined methodology tified nine principle required realize mlops figure 2 provides illustration principle link component associated automation automation provides tinuous integration continuous delivery continuous deployment carry build test delivery deploy step provides fast feedback developer regarding success failure certain step thus increasing productivity put idea devops tice therefore seen devops tactic 6 7 22 23 α β θ workflow orchestration workflow orchestration coordinate task ml workflow pipeline according directed acyclic graph dag dag define task execution order considering relationship cies 7 24 25 26 α β γ δ ζ η reproducibility reproducibility ability reproduce ml experiment obtain exact result 23 27 α β δ ε η versioning versioning ensures versioning data model code enable not only reproducibility also traceability compliance auditing reason 23 27 α β δ ε η collaboration collaboration ensures possibility work collaboratively data model code besides technical aspect principle emphasizes collaborative communicative work culture aiming reduce domain silo different role 7 25 27 α δ θ continuous ml training evaluation continuous training ct mean periodic retraining ml model based new feature data continuous training enabled support monitoring component feedback loop automated ml workflow pipeline ous training always includes evaluation run ass change model quality 23 24 28 29 β δ η θ general manage cost retraining fully considered update frequency necessary use case daily weekly powerful tool decrease cost retraining use online learning large scale web application benefiting iterative training step compared full training data set way model also reflect recent impactful event like catastrophe magnitude online learning optimization algorithm available 30 ml metadata metadata tracked logged orchestrated ml workflow task data tracking logging required training job iteration training date time duration etc ing model specific used parameter resulting performance metric model lineage data code ensure full traceability experiment run 6 7 31 32 α β δ ε ζ η θ continuous monitoring continuous monitoring implies periodic assessment data model code tructure resource model serving performance diction accuracy detect potential error change influence product quality 7 23 28 32 33 α β γ δ ε ζ η feedback loop multiple feedback loop required integrate insight quality assessment step development engineering process feedback loop experimental model engineering stage previous feature engineering stage another feedback loop required monitoring component observing model serving performance scheduler enable retraining 7 23 24 34 35 α β δ ζ η θ technical component identifying principle need incorporated mlops elaborate precise component implement ml system design lowing component listed described generic way essential functionality reference bracket refer respective principle technical component implementing component ponent ensures continuous integration continuous ery continuous deployment take care build test delivery deploy step provides rapid feedback developer regarding success failure certain step thus increasing overall productivity 6 7 22 23 24 28 α β γ ε ζ η example jenkins 7 24 github action η ing mlops workflow mean automated linting assembly registry training inference application code shippable format python wheel well execution unit integration test case automation idempotent process using dynamically assigned resource tool result binary package source code repository training ence application source code versioned repository allows multiple developer commit merge 31870 volume 11 2023 kreuzberger et al machine learning operation mlops overview definition architecture code 23 24 36 37 38 α β γ ζ θ ples include bitbucket 39 ζ gitlab 24 39 ζ github 37 ζ η gitea 23 workflow orchestration component workflow orchestration component offer task tion ml workflow via directed acyclic graph dag graph represent execution order artifact usage single step workflow workflow us example packaged code artifact respective process step like extracting data training inference embedding model binary application 6 7 23 26 31 α β γ δ ε ζ η example include apache airflow α ζ kubeflow pipeline ζ watson studio pipeline γ luigi ζ aws sagemaker pipeline β azure pipeline ε theory tool could also used schedule triggering specific task sequentially however complexity data task ha increased need tool specifically designed purpose workflow task orchestration workflow orchestration tool make easier efficiently manage interrelated interdependent task specifically designed manage plex task chain 40 feature store system feature store system ensures central storage commonly used feature ha two database configured one database offline feature store serve feature normal latency experimentation one database online store serve feature low latency prediction production 25 28 α β ζ ε θ example include google feast ζ amazon aws feature store β ζ ζ data training ml model come moreover data also come directly any kind data store feature store pose complex requirement highly dependent use case database hosted infrastructure cloud ever scalability typically realized cloud infrastructure use case workload combined batch ingestion pattern large data set high scalability achieved distributed file system 41 42 distributed database 43 44 combined parallel distributed data processing rithms mapreduce api like spark model training infrastructure model training infrastructure provides foundational computation resource cpu ram gpus provided tructure either distributed eral scalable distributed infrastructure recommended 7 23 27 28 32 33 37 45 46 δ ζ η θ example include local machine not scalable cloud computation 33 η θ well tributed computation several worker node 7 37 work supporting computation kubernetes η θ red hat openshift γ typically deep learning workload training inference therefore computation bound gpus optimized towards type workload primary focus compute node specification edge device age computation power limited quantized neural net operation 47 combination pruning hofmann coding investigated 48 model registry model registry store centrally trained ml model together metadata ha two main functionality storing ml artifact storing ml metadata see 7 24 25 34 35 α β γ ε ζ η θ advanced storage example include mlflow α η ζ aws sagemaker model registry ζ microsoft azure ml model registry ζ α simple storage example include microsoft azure storage google cloud storage amazon aws 23 ml metadata store ml metadata store allow tracking various kind metadata orchestrated ml workflow pipeline task another metadata store configured within model registry tracking logging metadata training job training date time duration etc including model specific used parameter resulting performance metric model lineage data code used 7 25 31 37 49 α β δ ζ θ example include trators metadata store tracking step experiment pipeline α kubeflow pipeline α ζ aws sagemaker pipeline α ζ azure ml ibm son studio γ mlflow provides advanced metadata store combination model registry 6 31 model serving component model serving component configured different purpose ples online inference prediction batch inference prediction using large volume input data serving provided via rest api dational infrastructure layer scalable distributed model serving infrastructure recommended 23 27 33 37 39 46 α β δ ζ η θ one example model serving component configuration use kubernetes docker technology containerize ml model leveraging python web application framework like flask 24 api serving α kubernetes supported framework kserving kubeflow α tensorflow serving serving 27 inferencing could also realized apache spark batch prediction θ example cloud service include microsoft azure ml rest api ε aws sagemaker endpoint α β ibm watson studio γ google vertex ai prediction service δ actual deployment model depends use case fall typically one category batch serverless inference inference achieved hosting model restful batch ence idempotent mapreduce workflow le inference used scalable serving required volume 11 2023 31871 kreuzberger et al machine learning operation mlops overview definition architecture monitoring component monitoring component take care continuous monitoring model serving performance prediction accuracy tionally monitoring ml infrastructure orchestration required 7 23 24 28 32 33 50 α ζ η θ example include prometheus grafana η ζ elk stack elasticsearch logstash kibana α η ζ simply tensorboard θ example monitoring capability kubeflow θ mlflow η aws sagemaker model monitor cloud watch ζ role describing principle resulting ation component identify necessary role order realize mlops following mlops ciplinary group process interplay different role crucial design manage automate operate ml system production following every role purpose related task briefly described business stakeholder similar role product owner project manager business stakeholder defines business goal achieved ml take care communication side business presenting return investment roi generated ml product 7 24 45 α β δ θ solution architect similar role architect solution architect design architecture defines technology used following thorough evaluation 7 24 α ζ data scientist similar role ml specialist ml developer data scientist translates business problem ml problem take care model engineering including selection algorithm hyperparameters 7 25 32 33 α β γ δ ε ζ η θ data engineer similar role dataops engineer data engineer build manages data ture engineering pipeline moreover role ensures proper data ingestion database feature store system 25 26 32 α β γ δ ε ζ η θ software engineer software engineer applies software design pattern widely accepted coding guideline best practice turn raw ml problem engineered product 32 α γ devops engineer devops engineer bridge gap development operation ensures proper automation ml workflow tion model deployment production monitoring 7 22 25 51 α β γ ε ζ η θ ml engineer ml engineer mlops engineer combine aspect several role thus ha knowledge role incorporates skill data scientist data engineer software engineer devops engineer backend engineer see figure 3 role build operates ml tructure manages automated ml workflow pipeline figure role intersection contributing mlops paradigm model deployment production monitor model ml infrastructure 7 24 25 32 α β γ δ ε ζ η θ architecture workflow basis identified principle component role derive generalized mlops architecture give ml researcher practitioner proper guidance depicted figure additionally depict flow sequence different task executed different stage artifact wa designed therefore ml researcher titioners choose technology work need mean mlops process component either built source tool also enterprise solution also mix match combination enterprise tool realize mlops possible enterprise software cloud service often allow connection tool via apis vice versa thus considered look newest development open source tool market growing rapidly frequently new option combination possible however certainly also some constraint come api interface connection combination general hard say gy good combine however newly introduced example application precise mentioning tool demonstrate possible combination depicted figure 4 illustrate ce mlops product initiation model ing includes mlops product initiation step b feature engineering pipeline including data ingestion feature store c experimentation automated ml workflow pipeline model serving 31872 volume 11 2023 kreuzberger et al machine learning operation mlops overview definition architecture figure mlops architecture workflow functional component role mlops product initiation 1 business holder analyzes business identifies potential business problem solved using ml 2 solution architect defines architecture design overall ml system decides technology used thorough evaluation 3 data scientist derives ml whether regression sification business goal 4 data engineer data scientist work together understand data required solve problem 5 answer clarified data engineer data scientist collaborate locate raw data source initial data analysis check distribution quality data well performing validation check furthermore ensure incoming data data source labeled meaning target attribute volume 11 2023 31873 kreuzberger et al machine learning operation mlops overview definition architecture known mandatory requirement supervised ml example data source already labeled data available labeling step wa covered upstream process requirement feature engineering pipeline feature relevant attribute required model training initial understanding raw data initial data analysis fundamental requirement feature engineering pipeline defined follows 6 data engineer defines data transformation rule malization aggregation cleaning rule bring data usable format 7 data scientist data engineer together define feature engineering rule calculation new advanced feature based feature initially defined rule must iteratively adjusted data scientist either based feedback coming experimental model ing stage monitoring component observing model performance feature engineering pipeline initially defined requirement feature engineering pipeline taken data engineer software engineer starting point build prototype feature neering pipeline initially defined requirement rule updated according iterative feedback coming either experimental model engineering stage monitoring component observing model performance production foundational requirement data engineer defines code required tration component ensure task orchestration feature engineering pipeline role also defines underlying infrastructure resource configuration 8 first feature engineering pipeline connects raw data instance streaming data static batch data data any cloud storage 9 data extracted data source 10 data preprocessing begin data transformation cleaning task tion rule artifact defined requirement gathering stage serf input task main aim task bring data usable format tion rule continuously improved based feedback 11 feature engineering task calculates new advanced feature based feature predefined feature engineering rule serve input task feature engineering rule continuously improved based feedback 12 lastly data ingestion job load batch streaming data feature store system target either offline online database any kind data store example implementation entire feature engineering pipeline found esmaeilzadeh et al 52 implemented nlp pipeline apache spark another example xu 53 strates financial institution may use spark process analyze large amount customer credit data credit history income demographic data transformed cleaned using spark dataframe sql functionality various feature engineering technique applied create set relevant feature credit risk model feature passed ml pipeline also implemented spark train evaluate predictive model assessing credit risk addition apache kafka used near streaming data ingestion feature engineering pipeline 54 ever some extent traditional etl tool used build feature engineering pipeline 55 c experimentation task experimentation stage led data scientist including initial configuration hardware runtime environment data scientist supported software engineer 13 data scientist connects feature store system data analysis alternatively data scientist also connect raw data initial analysis case any required data adjustment data scientist report required change back data engineering zone feedback loop 14 preparation validation data coming feature store system required task also includes train test split dataset creation 15 data scientist estimate algorithm hyperparameters model training triggered training data software engineer support data scientist creation model training code 16 different model parameter tested validated tively several round model training formance metric indicate good result iterative training stop model parameter identified via parameter tuning model training task model validation task iteratively repeated together task called model model neering aim identify algorithm hyperparameters model 17 data scientist export model commits code repository foundational requirement either devops engineer ml engineer defines code automated ml workflow pipeline commits itory either data scientist commits new ml model devops engineer ml engineer commits new ml workflow pipeline code repository component detects updated code trigger automatically pipeline carrying build test delivery step build step creates artifact containing ml model task ml workflow pipeline test step validates ml model ml flow pipeline code delivery step push versioned artifact artifact store image registry typical technology used experimentation step solution like one jupyter one example industry case ml experiment 31874 volume 11 2023 kreuzberger et al machine learning operation mlops overview definition architecture performed environment field natural language processing nlp 56 pany provides service sentiment analysis text summarization named entity recognition may use jupyter notebook perform ml experiment large amount text data company data scientist use jupyter notebook prepare data train evaluate optimize different ml model deep learning model test result track experiment textual data tracking meta data storing resulting model solution combination jupyter among others mlflow obeid 57 assessing risk based health record aljabri 58 fake news detection automated ml workflow pipeline devops engineer ml engineer take care management automated ml workflow pipeline also manage runtime environment underlying model training infrastructure form hardware resource framework supporting computation kubernetes workflow orchestration component trates task automated ml workflow pipeline task required artifact image pulled artifact store image registry task executed via isolated environment container finally workflow orchestration component gather metadata task form log completion time automated ml workflow pipeline triggered following task managed automatically 18 automated pulling versioned feature ture store system data extraction depending use case feature extracted either offline online database any kind data store 19 automated data preparation validation addition train test split defined automatically 20 automated final model training new unseen data versioned feature algorithm hyperparameters already predefined based setting previous experimentation stage model retrained refined 21 automated model evaluation iterative adjustment hyperparameters executed required performance metric indicate good result mated iterative training stop automated model training task automated model validation task tively repeated good result ha achieved 22 trained model exported 23 pushed model registry stored code containerized together associated configuration environment file training job iteration ml metadata store record metadata parameter train model resulting performance metric also includes tracking logging training job id training date time duration source artifact additionally model specific metadata called model lineage ing lineage data code tracked newly registered model includes source version feature data model training code used train model also model version status staging recorded status model switched staging production automatically handed devops engineer ml engineer model ment 24 component trigger continuous deployment pipeline ml model model serving code pulled initially prepared software engineer continuous deployment pipeline carry build test step ml model serving code deploys model production serving 25 model serving component make prediction new unseen data coming feature store system component designed software engineer online inference time prediction batch inference prediction cerning large volume input data prediction feature must come online database low latency whereas batch prediction feature served offline database normal latency tions often configured within container prediction request handled via rest api deploying application good practice use testing determine scenario model performs better compared another model example deploying challenger model addition existing champion model find one performs better collecting feedback example predicting hotel booking cellations 61 foundational requirement ml engineer manages computation infrastructure 26 monitoring component observes continuously performance infrastructure certain threshold reached detection low prediction accuracy information forwarded via feedback loop 27 feedback loop connected monitoring component ensures fast direct feedback allowing robust improved tions enables continuous training retraining ment support feedback loop information transferred model monitoring component several upstream receiver point experimental stage data engineering zone scheduler trigger feedback experimental stage taken forward data scientist model improvement feedback data engineering zone allows adjustment feature prepared feature store system additionally tion concept drift feedback mechanism enable 28 continuous training concept drift occur application input data change time sensor break decreased prediction accuracy due volume 11 2023 31875 kreuzberger et al machine learning operation mlops overview definition architecture concept drift detected certain concept drift detection algorithm 59 ponent detects drift data 60 information forwarded scheduler trigger automated ml workflow pipeline retraining continuous training explained change adequacy deployed model detected using distribution comparison identify drift retraining not only triggered automatically statistical threshold reached also triggered new feature data available scheduled periodically typical technology supporting automated ml flow pipeline among others apache airflow kubeflow pipeline ibm watson studio pipeline sagemaker pipeline one example industry use case mated machine learning workflow pipeline using airflow field online advertising 62 company may use airflow automate process training deploying machine learning model ad targeting optimization pipeline start extracting transforming loading large amount data various source website clickstream data user demographic campaign mance data data passed series preprocessing feature engineering step implemented airflow operator next different machine learning el trained evaluated processed data also using airflow operator model deployed production environment used make ad targeting decision case apache airflow used automate entire process including scheduling monitoring failed task vi conceptualizaton finding hand conceptualize literature interview becomes obvious term mlops positioned intersection machine learning software engineering devops data engineering see figure 5 define mlops follows mlops machine learning operation paradigm including aspect like best practice set concept well development culture come end conceptualization implementation monitoring ment scalability machine learning product engineering practice leverage three contributing discipline machine learning software neering especially devops data engineering mlops aimed productionizing machine learning system bridging gap development dev operation ops essentially mlops aim facilitate creation machine learning product leveraging principle automation workflow orchestration reproducibility versioning data model code collaboration tinuous ml training evaluation ml metadata ing logging continuous monitoring feedback loop figure intersection discipline mlops paradigm vii open challenge several challenge adopting mlops identified conducting literature review tool review view study open challenge organized category organizational ml system operational challenge organizational challenge mindset culture data science practice typical challenge organizational setting 63 insight literature interview show successfully develop run ml product need culture shift away machine learning toward oriented discipline γ recent trend ai also address aspect putting focus related aspect taking place prior ml model building especially role associated activity perspective designing ml product γ great number skill individual role required mlops β identified source point lack highly skilled expert especially regard architect data engineer ml neers devops engineer 26 32 38 α ε related necessary education future mlops typically not part data science education 33 γ posoldova 6 stress aspect remarking student not only learn model creation must also learn technology component necessary build functional ml product data scientist alone not achieve goal mlops team required 25 thus mlops need group process α often hindered team work silo rather cooperative setup α ally different knowledge level specialized gy make communication difficult lay foundation fruitful setup respective 31876 volume 11 2023 kreuzberger et al machine learning operation mlops overview definition architecture need convinced increased mlops maturity mindset yield clear business improvement γ ml system challenge major challenge regard mlops system ing fluctuating demand especially relation process ml training 33 stem potentially voluminous varying data 28 make difficult precisely estimate necessary infrastructure resource cpu ram gpu requires high level flexibility term scalability infrastructure 7 33 δ operational challenge productive setting challenging operate ml manually due different stack software hardware component interplay well selection 64 65 therefore robust automation required 24 33 also constant incoming stream new data force retraining capability repetitive task requires high level automation 66 θ repetitive task yield large number artifact require strong governance 27 32 45 well versioning data model code ensure robustness ducibility 7 32 39 lastly challenging resolve potential support request finding root cause many party component involved failure combination ml infrastructure software within mlops stack 7 viii conclusion increase data availability analytical ities coupled constant pressure innovate machine learning product ever developed however only small number proof concept progress deployment production furthermore academic space ha focused intensively machine learning model building benchmarking little operating complex machine learning system scenario real world observe data scientist still managing ml workflow manually great extent paradigm machine learning operation mlops address challenge work shed light mlops conducting study analyzing existing literature tool well interviewing eight expert field uncover four main aspect mlops principle component role architecture aspect infer holistic definition result support common understanding term mlops associated concept hopefully assist researcher sionals setting successful ml product future reference 1 aykol herring anapolsky machine learning continuous innovation battery technology nature rev vol 5 no 10 pp jun 2020 2 gourisaria agrawal harshvardhan pandey rautaray application machine learning industry machine learning theoretical foundation practical application cham switzerland springer 2021 pp 3 hera machine learning technology sustainability smart city era sustainability vol 12 no 22 9320 2020 4 kocielnik amershi bennett accept imperfect ai exploring design adjusting expectation ai system proc chi conf hum factor comput may 2019 pp 5 van der meulen mccall 2018 gartner say nearly half cio planning deploy artificial intelligence accessed 4 2021 online available 6 posoldova machine learning pipeline research production ieee potential vol 39 no 6 pp 2020 7 lwakatare crnkovic rånge bosch data science driven process continuous delivery process machine learning system software process improvement lecture note computer science vol springer 2020 pp doi 8 royce managing development large software system proc ieee wescon 1970 pp 9 beck et agile manifesto 2001 online available 10 debois 2009 patrick debois devopsdays ghent accessed mar 25 2021 online available 11 mezak 25 2018 origin devops name accessed mar 25 2021 online available 12 leite rocha kon milojicic meirelles survey devops concept challenge acm comput vol 52 no 6 pp 2020 doi 13 macarthy bass empirical taxonomy devops practice proc euromicro conf softw eng adv appl seaa 2020 pp doi 14 rütz devops systematic literature review inf softw 2019 online available 15 perera silva perera improve software quality practicing devops proc int conf adv ict emerg region icter 2017 pp 16 webster watson analyzing past prepare future writing literature review mi vol 26 no 2 pp 2002 online available doi 17 kitchenham brereton budgen turner bailey linkman systematic literature review software systematic literature review inf softw vol 51 no 1 pp 2009 doi 18 myers newman qualitative interview research examining craft inf vol 17 no 1 pp 2007 doi 19 schultze avital designing interview generate rich data information system research inf vol 21 no 1 pp 2011 doi 20 corbin strauss grounded theory research procedure canon evaluative criterion qualitative vol 13 no 1 pp 1990 doi 21 glaser strauss discovery grounded theory gy qualitative research london aldine 1967 doi 22 granlund kopponen stirbu myllyaho mikkonen mlops challenge setup experience two case 2021 23 zhou yu ding towards mlops case study ml pipeline platform proc int conf artif intell comput eng icaice 2020 pp doi volume 11 2023 31877 kreuzberger et al machine learning operation mlops overview definition architecture 24 karamitsos albarhami apostolopoulos applying devops practice continuous automation machine learning information vol 11 no 7 pp 2020 doi 25 goyal mlops machine learning operation int inf technol insight transformation vol 4 no 2 accessed apr 15 2021 online available 26 tamburri sustainable mlops trend challenge proc int symp symbolic numeric algorithm sci comput synasc 2020 pp doi 27 spjuth frid hellander machine learning life cycle cloud implication drug discovery expert ion drug discovery vol 16 no 9 pp 2021 doi 28 derakhshan mahdiraji rabl markl continuous deployment machine learning pipeline proc edbt mar 2019 pp doi 29 karn kudva elfadel dynamic autoselection autotuning machine learning model cloud network analytics ieee trans parallel distrib vol 30 no 5 pp may 2019 doi 30 online learning online convex optimization found trend mach vol 4 no 2 pp 2012 31 molner domenech guillén python work reproducible data science j conf vol 1603 no 1 2020 art no 012025 doi 32 makinen skogstrom laaksonen mikkonen need mlops data scientist seek accomplish mlops help proc workshop ai eng softw eng ai wain may 2021 pp 33 silva zagatti sette santos silva lucredio silva de medeiros caseli ing machine learning solution production proc ieee int conf mach learn appl icmla 2020 pp doi 34 banerjee chen hung huang wang chevesaran challenge experience mlops mance diagnostics enterprise software deployment proc opml usenix conf oper mach 2020 pp 35 benni mosser precioso jungbluth devops meet portfolio rule proc int conf model driven eng lang syst panion 2019 pp doi 36 vuppalapati ilapakurti chillara kedari mamidi automating tiny ml intelligent sensor devops using microsoft azure proc ieee int conf big data big data 2020 pp doi 37 garcía lucas antonacci castell david framework machine learning workload application ieee access vol 8 pp 2020 doi 38 wu haihong song automatic artificial intelligence training platform based kubernetes proc int conf big data eng 2020 pp doi 39 fursin collective knowledge organizing research project database reusable component portable workflow common interface phil trans roy soc phys eng vol 379 no 2197 may 2021 art no 20200211 doi 40 schmitt airflow luigi argo mlflow kubeflow tech 2022 online available 41 shvachko kuang radia chansler hadoop tributed file system proc ieee symp mass storage syst nol msst may 2010 pp 42 ghemawat gobioff leung google file system proc acm symp operating syst 2003 pp 43 lakshman malik cassandra decentralized structured age system acm sigops oper syst vol 44 no 2 pp apr 2010 44 corbett spanner google globally distributed database acm trans comput syst tocs vol 31 no 3 pp 2013 45 liu ling huo wang chen mouine building platform machine learning operation open source work vol 53 no 5 pp 2020 doi 46 yoon han lee kim devops portal design smartx ai cluster employing machine learning workflow vol cham switzerland springer 2020 doi 47 hubara courbariaux soudry bengio tized neural network training neural network low precision weight activation mach learn vol 18 no 1 pp 2017 48 han mao dally deep compression compressing deep neural network pruning trained quantization huffman coding 2015 49 lwakatare crnkovic bosch devops challenge development application proc int conf telecommun comput netw softcom 2020 pp doi 50 renggli rimanic gürel karlaš wu zhang data view mlops 2021 51 van den heuvel tamburri intelligent enterprise application vision approach challenge vol cham switzerland springer 2020 doi 52 esmaeilzadeh heidari abdolazimi hajibabaee malekzadeh efficient large scale nlp feature engineering apache spark proc ieee annu comput commun workshop conf ccwc 2022 pp 53 xu mlops financial industry philosophy practice tool future fintech abcdi beyond singapore world scientific 2022 451 doi 54 carcillo pozzolo borgne caelen mazzer bontempi scarff scalable framework streaming credit card fraud detection spark accessed 17 2023 online available 55 dhanalakshmi ayyanathan dynamic web data extraction srldc southern regional load dispatch centre feature engineering using etl tool proc int conf artif adv appl springer 2022 pp doi 56 foster wagner naive bayes versus bert jupyter notebook assignment introductory nlp course proc workshop teaching nlp 2021 pp 57 obeid davis turner meystre heider bryan lenert artificial intelligence approach infection risk assessment virtual visit case report amer med inform vol 27 no 8 pp 2020 58 aljabri alomari aboulnour fake news detection using machine learning model proc int conf comput intell commun netw cicn 2022 pp 59 baier kühl satzger cope change validity predictive service time proc annu hawaii int conf syst 2019 pp 60 baier schlör schöffer kühl detecting concept drift neural network model uncertainty 2021 61 antonio de almeida nunes predicting hotel booking cancellation machine learning classification model proc ieee int conf mach learn appl icmla 2017 pp doi 62 cui wang namih build intelligent online marketing system overview ieee internet vol 23 no 4 pp jul 2019 63 baier seebacher challenge deployment proc eur conf inf syst ecis stockholm sweden jun 2019 pp online available 64 ruf madan reich demystifying mlops presenting recipe selection tool appl vol 11 no 19 8861 2021 65 hewage meedeniya machine learning operation survey mlops tool support 2022 66 karlaš interlandi renggli wu zhang babu edward lauren xu weimer building continuous integration service machine learning proc acm sigkdd int conf knowl discovery data mining 2020 pp doi 31878 volume 11 2023 kreuzberger et al machine learning operation mlops overview definition architecture dominik kreuzberger received degree business information system part dual study program cooperative state university dhbw stuttgart degree information system engineering management focus digital service machine learning operation mlops karlsruhe institute ogy kit currently architect cializing hybrid cloud computing artificial intelligence solution also ibm focus client success design build data product based ibm technology joining ibm worked nearly decade multinational sport company adidas time held various position area data analytics niklas kühl received degree summa cum laude information system focus applied machine learning study working conceptualizing designing menting artificial intelligence ai product focus learning well fair effective collaboration within team currently full professor mation system ai university bayreuth also group lead fraunhofer fit business analytics well senior expert artificial intelligence ibm past wa managing consultant data science ibm complemented theoretical knowledge practical insight field ha working machine learning ml ai different domain since internationally collaborating multiple institution university texas watson ai laboratory sebastian hirschl currently senior ibm lead ml engineering platform activity machine learning practice germany bine computer science background machine learning artificial intelligence developed discipline machine learning ml neering within ibm last five year including best practice method role tool design lead implementation data ml product client germany europe together team publishes ibm data science best practice well shape ibm data ai reference architecture role ml engineering expert drive evolution paradigm mlops internally externally volume 11 2023 31879